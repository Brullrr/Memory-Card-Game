{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","assets/Images/Burger-Menu.PNG","components/Layout/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/Toolbar/Menu/Menu.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/CheckoutSummary/CheckoutSummary.module.css","containers/BurgerBuilder/Checkout/ContactData/ContactData.module.css","containers/Orders/Order/Order.module.css","containers/Auth/Auth.module.css","components/Layout/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Menu/Menu.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHanlder.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/BurgerBuilder/Checkout/ContactData/ContactData.js","containers/BurgerBuilder/Checkout/Checkout.js","containers/Orders/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","logo","props","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","menu","DrawerToggle","onClick","open","toolbar","Toolbar","Menu","openSidebar","DesktopOnly","backdrop","show","Backdrop","clicked","sideDrawer","attachedClasses","SideDrawer","Close","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","openSidebarHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","console","log","ingredients","transformedIngredients","Object","keys","map","igKey","Array","_","index","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","axiosInstance","create","baseURL","auth","email","password","isSignup","dispatch","authData","url","post","then","idToken","userId","expirationTime","data","localId","expiresIn","setTimeout","catch","err","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchased","history","push","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","burgerBuilder","totalPrice","ingName","ingredientName","get","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","isEmail","test","isNumeric","formElementsArray","id","config","form","onSubmit","formElement","loading","orderID","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","Auth","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","errorMessage","App","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","orderId","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","uderId","authStart","authSuccess","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2a23bb7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__ld9Je\",\"BreadTop\":\"BurgerIngredient_BreadTop__2h13b\",\"Seeds1\":\"BurgerIngredient_Seeds1__2RYFV\",\"Seeds2\":\"BurgerIngredient_Seeds2__x7ZMd\",\"Meat\":\"BurgerIngredient_Meat__1C6Lz\",\"Cheese\":\"BurgerIngredient_Cheese__25HhS\",\"Salad\":\"BurgerIngredient_Salad__3wIkh\",\"Bacon\":\"BurgerIngredient_Bacon__kQDFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__21X1v\",\"Open\":\"SideDrawer_Open__1ksOl\",\"Close\":\"SideDrawer_Close__1RvRv\",\"Logo\":\"SideDrawer_Logo__1U4_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__33Yl-\",\"Label\":\"BuildControl_Label__fVO7j\",\"Less\":\"BuildControl_Less__WruOB\",\"More\":\"BuildControl_More__3ytqZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2k6Ie\",\"Label\":\"Input_Label__36rsW\",\"InputElement\":\"Input_InputElement__Uy9Bi\",\"Invalid\":\"Input_Invalid__1M3Wp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3m8mt\",\"Logo\":\"Toolbar_Logo__1CIfC\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3i8Z4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2aQlH\",\"active\":\"NavigationItem_active__38chj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2r9B2\",\"OrderButton\":\"BuildControls_OrderButton__wR5wA\",\"enable\":\"BuildControls_enable__1tRig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3m61o\",\"Success\":\"Button_Success__Nu-xK\",\"Danger\":\"Button_Danger__21--X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1AnCr\"};","module.exports = __webpack_public_path__ + \"static/media/Burger-Menu.e1c9f1c1.PNG\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1hv-L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1DNjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"Menu_DrawerToggle__c4GOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__21S4s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3VNR-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__Kg8B8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__17G0f\",\"load3\":\"Spinner_load3__109L_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChecckoutSummary\":\"CheckoutSummary_ChecckoutSummary__39Zmv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3j-Dp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3Ecsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3ZTd-\",\"ContactData\":\"Auth_ContactData__1kimC\"};","import React from 'react';\r\n\r\nimport burgerLogo from '../../../assets/Images/Burger-Menu.PNG';\r\nimport classes from './Logo.module.css';\r\n\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt='burger logo' />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport classes from '../NavigationItem/NavigationItem.module.css'\r\n\r\nconst navigationItem = (props) => (\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink\r\n            to={props.link} \r\n            exact={props.exact}\r\n            activeClassName={classes.active}\r\n            >{props.children}</NavLink>\r\n        </li>\r\n)\r\n\r\n\r\n\r\nexport default navigationItem","import React from 'react';\r\n\r\nimport classes from '../NavigationItems/NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        \r\n            <NavigationItem link='/' exact >Burger Builder</NavigationItem>\r\n            <NavigationItem link='/orders'>Orders</NavigationItem>\r\n            <NavigationItem link='/auth'>Authentication</NavigationItem>\r\n        \r\n    </ul>\r\n);\r\n\r\n\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './Menu.module.css';\r\n\r\nconst menu = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.open}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default menu;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Layout/Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Menu from '../Toolbar/Menu/Menu';\r\n\r\n\r\nconst toolbar = ( props ) => (\r\n    <header className={classes.Toolbar} >\r\n        <Menu open={props.openSidebar}/>\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n)\r\n\r\nexport default backdrop","import React, {Fragment} from 'react';\r\n\r\nimport Logo from '../../Layout/Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close]; \r\n    if(props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n        \r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, {Fragment, Component} from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false})\r\n    }\r\n\r\n    openSidebarHandler = () => {\r\n        this.setState( ( prevState ) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer };\r\n        } );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment> \r\n                <Toolbar openSidebar={this.openSidebarHandler}/>\r\n                <SideDrawer open={this.state.showSideDrawer} \r\n                closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default Layout;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\n \r\nclass BurgerIngredient extends Component  {\r\n    render () {\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n            }\r\n\r\n        return ingredient\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired \r\n}\r\n \r\n\r\nexport default BurgerIngredient;","import React from 'react'\r\n\r\nimport classes from './Burger.module.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst burger = ( props ) => {\r\n    console.log(props.ingredients)\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map( igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, index) => {\r\n                return <BurgerIngredient key={igKey+index} type={igKey} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n    }, []);\r\n    if(transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>ADD INGREDIENTS</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    ); \r\n};\r\n\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n        className={classes.Less} \r\n            onClick={props.removed} \r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n            className={classes.More} \r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong> </p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label} \r\n            added={() => props.ingredientAdded(ctrl.type)}\r\n            removed={() => props.ingredientRemoved(ctrl.type)} \r\n            disabled={props.disabled[ctrl.type]}/>            \r\n        ))}\r\n        <button \r\n            className={classes.OrderButton }\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, {Fragment, Component} from 'react';\r\n\r\nimport classes from './Modal.module.css'\r\n\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n    disabled={props.disabled}\r\n    className={[classes.Button, classes[props.btnType]].join(' ')}\r\n    onClick={props.clicked}\r\n    >{props.children}</button>\r\n)\r\n\r\nexport default button;","import React, {Fragment, Component} from 'react';\r\n\r\n\r\nimport Button from '../../UI/Button/Button'\r\n\r\nclass OrderSummary extends Component {\r\n    //This could be functional component cus it doesn't access state\r\n    componentDidUpdate(){\r\n        console.log('[orderSummary will update]')\r\n    }\r\n\r\n    render() {\r\n        const ingredientSummary = Object.keys( this.props.ingredients )\r\n        .map( igKey => {\r\n            return (\r\n                <li key={igKey}>\r\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                </li> );\r\n        } );\r\n\r\n        return (\r\n            <Fragment>\r\n                <h3>Your Order</h3>\r\n                <p>A burger</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                 <p><strong>Total Price:  {this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout</p>\r\n                <Button btnType='Danger' clicked={this.props.purchaseCancelled}>Cancel</Button>\r\n                <Button btnType='Success' clicked={this.props.purchaseContinued}>Continue</Button>\r\n            </Fragment>\r\n        )\r\n        \r\n\r\n\r\n    }\r\n\r\n} \r\n    \r\n    \r\n\r\n    \r\n\r\n\r\n\r\nexport default OrderSummary;","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, {Component, Fragment} from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state ={\r\n            error: null\r\n        } \r\n\r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use( req => {\r\n                this.setState( { error: null } );\r\n                return req;\r\n            } );\r\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\r\n                this.setState( { error: error } );\r\n            } );\r\n        }\r\n\r\n        componentWillUnmount () {\r\n            axios.interceptors.request.eject( this.reqInterceptor );\r\n            axios.interceptors.response.eject( this.resInterceptor );\r\n        }\r\n\r\n        errorConfirmedHandler = () =>{\r\n            this.setState({error: null})\r\n        } \r\n\r\n        render () {\r\n            return (\r\n                <Fragment>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Fragment>              \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://react-my-burger-brull.firebaseio.com/'\r\n});\r\n\r\n\r\nexport default axiosInstance;","import axios from 'axios';\r\n\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\n\r\nexport const authSuccess = (idToken, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: idToken,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(()=> {\r\n            dispatch(logout())\r\n        }, expirationTime * 1000)\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB75Fx-thG_cxKZ8JHzAsFjcvFwbMkb-hY'\r\n        if(isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB75Fx-thG_cxKZ8JHzAsFjcvFwbMkb-hY'\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId ))\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error))\r\n            })\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL'\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\n\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React, { Fragment, Component} from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../../src/components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHanlder';\r\nimport * as actions from '../../store/actions/index'\r\nimport axios from '../../axios-orders';\r\n\r\nclass BurgerBuilder extends Component { \r\n\r\n\r\n\r\n\r\n    state = {\r\n        purchasing: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        this.props.onInitIngredients()  \r\n    }\r\n\r\n    \r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el; \r\n            }, 0 );\r\n        return sum > 0;\r\n    }\r\n\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true})\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState( { purchasing: false } );\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchased();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <=0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n        console.log(this.props.ings)\r\n        if( this.props.ings ) {\r\n            \r\n            burger = (\r\n                <Fragment>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls \r\n                    ingredientAdded={this.props.onIngredientAdded}\r\n                    ingredientRemoved={this.props.onIngredientRemoved}\r\n                    disabled={disabledInfo}\r\n                    purchasable={this.updatePurchaseState(this.props.ings)}\r\n                    price={this.props.price}\r\n                    ordered={this.purchaseHandler} />\r\n                </Fragment>\r\n            );\r\n            orderSummary = <OrderSummary \r\n                ingredients={this.props.ings} \r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.price}/>\r\n        }\r\n        \r\n\r\n        return (\r\n            <Fragment>\r\n                <Modal \r\n                    show={this.state.purchasing}\r\n                    modalClosed={this.purchaseCancelHandler} >\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}   \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    };\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchased: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return  {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-brull.firebaseio.com/Ingredients.json')\r\n        .then(response => {\r\n            \r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed());\r\n        });\r\n    }\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders'\r\n\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderID: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart())\r\n        axios.post('/orders.json?auth-=' + token, orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name , orderData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = ( orders ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        \r\n        axios.get( '/orders.json?auth=' + token)\r\n            .then( res => {\r\n                const fetchedOrders = [];\r\n                for ( let key in res.data ) {\r\n                    fetchedOrders.push( {\r\n                        ...res.data[key],\r\n                        id: key\r\n                    } );\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            } )\r\n            .catch( err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            } );\r\n    };\r\n};","import React from 'react';\r\n\r\nimport Burger from '../Burger/Burger'\r\nimport Button from '../UI/Button/Button'\r\nimport classes from '../CheckoutSummary/CheckoutSummary.module.css'\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it taste wells</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType='Danger' \r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\" \r\n                clicked={props.checkoutContinued}>SUCCESS</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from '../Input/Input.module.css';\r\n\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement]\r\n    \r\n    if(props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'): \r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n            className={inputClasses} \r\n            {...props.elementConfig} \r\n            value={props.value} \r\n            onChange={props.changed}/>;\r\n            break;\r\n            case ('select'):\r\n                inputElement = <select \r\n                className={inputClasses.join(' ')} \r\n                value={props.value} \r\n                onChange={props.changed}>\r\n                {props.elementConfig.options.map(option=> (\r\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                ))}\r\n                </select>;\r\n                break;            \r\n        default: \r\n            inputElement = <input \r\n            className={inputClasses.join(' ')} \r\n            {...props.elementConfig} \r\n            value={props.value}/>;\r\n    }\r\n\r\n\r\n    return (\r\n    <div className={classes.Input}>\r\n        <label className={classes.Label} >{props.label}</label>\r\n        {inputElement}\r\n    </div>\r\n    )\r\n};\r\n\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Button from '../../../../components/UI/Button/Button';\r\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\r\nimport classes from '../ContactData/ContactData.module.css';\r\nimport axios from '../../../../axios-orders';\r\nimport Input from '../../../../../src/components/UI/Input/Input'\r\nimport withErrorHandler from '../../../../hoc/withErrorHandler/withErrorHanlder'\r\nimport * as actions from '../../../../store/actions/index'\r\n\r\nclass ContactData extends Component { \r\n    state ={\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: 'fastest',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },            \r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: 'fastest',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },   \r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-mail'\r\n                },\r\n                value: 'fastest',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },   \r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'},\r\n                    ]\r\n                },\r\n                value: '',\r\n                validation: {},\r\n                valid: true\r\n            },   \r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData ={}; \r\n        for ( let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n\r\n        this.props.onOrderBurger(order, this.props.token)\r\n        \r\n    }\r\n\r\n    checkValidity(value,  rules){\r\n        let isValid = true;\r\n        if(!rules) {\r\n            return true;\r\n        }\r\n\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if(rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if(rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm ={\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {...updatedOrderForm[inputIdentifier]};\r\n    \r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n\r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid})\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = []\r\n        for(let key in this.state.orderForm) {\r\n            formElementsArray.push(\r\n                {\r\n                    id: key,\r\n                    config: this.state.orderForm[key]\r\n                }\r\n            );\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {\r\n                    formElementsArray.map( formElement => (\r\n                        <Input \r\n                            key={formElement.id} \r\n                            elementType={formElement.config.elementType}\r\n                            elementConfig={formElement.config.elementConfig}\r\n                            value={formElement.config.value} \r\n                            invalid={!formElement.config.valid}\r\n                            shouldValidate={formElement.config.validation}\r\n                            touched={formElement.config.touched}\r\n                            changed={(event) => {this.inputChangedHandler(event, formElement.id) }}/>\r\n                    ))\r\n                }\r\n                <Button btnType='Success' disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if(this.props.loading) {\r\n            \r\n            form = <Spinner />\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact details</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios)); ","import React, { Component } from 'react';\r\nimport CheckoutSummary from '../../../components/CheckoutSummary/CheckoutSummary';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport ContactData from '../../../containers/BurgerBuilder/Checkout/ContactData/ContactData';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to='/'/>\r\n        if (this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/'/> : null\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n               <CheckoutSummary \r\n                    ingredients={this.props.ings} \r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler} />\r\n                <Route \r\n                    path={this.props.match.path + '/contact-data'} \r\n                    component={ContactData} />\r\n            </div>  \r\n            )\r\n        }\r\n        return summary\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from '../Order/Order.module.css'\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName, \r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n        style={{  \r\n            textTransform: 'capitalize',\r\n            display: 'inline-block',\r\n            margin: '0px 8px',\r\n            border: '1px solid #ccc',\r\n            padding: '5px'\r\n            }}\r\n        key={ig.name}>{ig.name} ({ig.amount}) </span>\r\n    });\r\n\r\n    return (\r\n    <div className={classes.Order}>\r\n        <p>Ingredients: {ingredientOutput}</p>\r\n        <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n    );\r\n};\r\n\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../Orders/Order/Order';\r\nimport axios from '../../../src/axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHanlder';\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n    componentDidMount () {\r\n        this.props.onFetchOrders(this.props.token);\r\n    }\r\n    \r\n    render () { \r\n        let orders = <Spinner />;\r\n        \r\n        if ( !this.props.loading ) {\r\n            orders = this.props.orders.map ( order => (\r\n                <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token) => dispatch( actions.fetchOrders(token) )\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    checkValidity(value,  rules){\r\n        let isValid = true;\r\n        if(!rules) {\r\n            return true;\r\n        }\r\n\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if(rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if(rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        }\r\n        this.setState({controls: updatedControls})\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup};   \r\n        })\r\n    }\r\n\r\n\r\n    render () {\r\n        const formElementsArray = []\r\n        for(let key in this.state.controls) {\r\n            formElementsArray.push(\r\n                {\r\n                    id: key,\r\n                    config: this.state.controls[key]\r\n                }\r\n            );\r\n        }\r\n\r\n        let form = formElementsArray.map( formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value} \r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => {this.inputChangedHandler(event, formElement.id) }}\r\n            />\r\n        ));\r\n\r\n        if(this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if(this.props.error) {\r\n            errorMessage = (\r\n            <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType='Success'>Submit</Button>\r\n                </form>\r\n\r\n                <Button \r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType='Danger'>{this.state.isSignup ? 'Sign in' : 'Sign up'}?</Button>\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        loading: state.auth.loading,\r\n        error: state.auth.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { \r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup))\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from '../src/containers/BurgerBuilder/Checkout/Checkout';\nimport Orders from '../src/containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\n\nclass App extends Component {\n  render() {\n    return (\n      <div >\n        <Layout>\n          <Switch>\n            <Route path='/checkout' component={Checkout} />\n            <Route path='/orders' component={Orders} /> \n            <Route path='/auth' component={Auth} /> \n            <Route path='/' exact component={BurgerBuilder} />\n          </Switch> \n        </Layout>        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n};\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7,\r\n};\r\n\r\nconst addIngredient = ( state, action ) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject( state, updatedState );\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject( state, updatedSt );\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject( state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false\r\n    } );\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject( state, { error: true } );\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = ( state, action ) => {\r\n    return updateObject( state, { purchased: false } );\r\n};\r\n\r\nconst purchaseBurgerStart = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst purchaseBurgerSuccess = ( state, action ) => {\r\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\r\n    return updateObject( state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat( newOrder )\r\n    } );\r\n};\r\n\r\nconst purchaseBurgerFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst fetchOrdersStart = ( state, action ) => {\r\n    return updateObject( state, { loading: true } );\r\n};\r\n\r\nconst fetchOrdersSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst fetchOrdersFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility'\r\n\r\n\r\nconst initialState = {\r\n    token: null,\r\n    uderId: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\n\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true})\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, { \r\n        token: action.idToken, \r\n        userId: action.userId, \r\n        error: null, \r\n        loading: false })\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {error: action.error, loading: false })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    })\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action)\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action)\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store}> \n//       <BrowserRouter>\n//         <App />\n//       </BrowserRouter> \n//     </Provider>\n    \n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nconst app = (\n  <Provider store={store}>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}