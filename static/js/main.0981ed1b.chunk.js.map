{"version":3,"sources":["MemoryCardGame/components/WorldMapComponent/WorldMap.module.css","MemoryCardGame/reusables/gameBoard/GameBoard.module.css","MemoryCardGame/reusables/Images/Imp.png","MemoryCardGame/components/Stages/StageFourComponent/StageFour.module.css","MemoryCardGame/reusables/Images/StageTwo/Crit.PNG","MemoryCardGame/reusables/Images/StageTwo/Racoon.png","MemoryCardGame/reusables/Images/StageTwo/Squirrel.png","MemoryCardGame/reusables/Images/StageTwo/Goose.png","MemoryCardGame/reusables/Images/StageTwo/Dino.png","MemoryCardGame/components/Stages/StageTwoComponent/StageTwo.module.css","MemoryCardGame/components/Stages/StageThreeComponent/StageThree.module.css","MemoryCardGame/reusables/Images/SunsetDino.png","MemoryCardGame/reusables/Images/SpeechBubble.png","MemoryCardGame/components/GameLost/GameLost.module.css","MemoryCardGame/components/Stages/StageOneComponent/StageOne.module.css","MemoryCardGame/components/GameWon/GameWon.module.css","MemoryCardGame/components/FirstTimeCompenent/FirstTime.module.css","MemoryCardGame/reusables/Images/StageOne/Frog.png","MemoryCardGame/reusables/backToBattle/BackToBattle.module.css","MemoryCardGame/reusables/Overlay/Overlay.module.css","MemoryCardGame/reusables/LossModal/LossModal.module.css","MemoryCardGame/reusables/Images/DeerCongrats.png","MemoryCardGame/reusables/Images/StageOne/Draftfish.png","MemoryCardGame/reusables/Images/StageOne/DraftfishBlue.png","MemoryCardGame/reusables/Images/StageOne/DraftfishBlack.png","MemoryCardGame/reusables/Images/StageOne/DraftfishDarkGreen.png","MemoryCardGame/reusables/Images/StageOne/DraftfishDarkPurple.png","MemoryCardGame/reusables/Images/StageOne/DraftfishGreen.png","MemoryCardGame/reusables/Images/StageOne/DraftfishGrey.png","MemoryCardGame/reusables/Images/StageOne/DraftfishOrange.png","MemoryCardGame/reusables/Images/StageOne/DraftfishPurple.png","MemoryCardGame/reusables/Images/StageOne/DraftfishRed.png","MemoryCardGame/reusables/Images/StageOne/DraftfishTeal.png","MemoryCardGame/reusables/Images/StageOne/DraftfishYellow.png","MemoryCardGame/reusables/Timer/Timer.module.css","MemoryCardGame/reusables/Images/StageThree/Oracle.PNG","MemoryCardGame/reusables/Images/StageThree/ImoWhite.png","MemoryCardGame/reusables/Images/StageThree/ImoDarkBlue.png","MemoryCardGame/reusables/Images/StageThree/ImoBlack.png","MemoryCardGame/reusables/Images/StageThree/ImoDarkGreen.png","MemoryCardGame/reusables/Images/StageThree/ImoDarkPurple.png","MemoryCardGame/reusables/Images/StageThree/ImoLightGreen.png","MemoryCardGame/reusables/Images/StageThree/ImoGrey.png","MemoryCardGame/reusables/Images/StageThree/ImoOrange.png","MemoryCardGame/reusables/Images/StageThree/ImoLightPurple.png","MemoryCardGame/reusables/Images/StageThree/ImoRed.png","MemoryCardGame/reusables/Images/StageThree/ImoLightBlue.png","MemoryCardGame/reusables/Images/StageThree/ImoYellow.png","MemoryCardGame/reusables/Images/StageThree/GoolWhite.png","MemoryCardGame/reusables/Images/StageThree/GoolDarkBlue.png","MemoryCardGame/reusables/Images/StageThree/GoolBlack.png","MemoryCardGame/reusables/Images/StageThree/GoolDarkGreen.png","MemoryCardGame/reusables/Images/StageThree/GoolDarkPurple.png","MemoryCardGame/reusables/Images/StageThree/GoolLightGreen.png","MemoryCardGame/reusables/Images/StageThree/GoolGrey.png","MemoryCardGame/reusables/Images/StageThree/GoolOrange.png","MemoryCardGame/reusables/Images/StageThree/GoolLightPurple.png","MemoryCardGame/reusables/Images/StageThree/GoolRed.png","MemoryCardGame/reusables/Images/StageThree/GoolLightBlue.png","MemoryCardGame/reusables/Images/StageThree/GoolYellow.png","MemoryCardGame/reusables/Images/Heart.png","MemoryCardGame/reusables/Images/StageFour/deerRed.png","MemoryCardGame/reusables/Images/StageFour/deerOrange.png","MemoryCardGame/reusables/Images/StageFour/deerYellow.png","MemoryCardGame/reusables/Images/StageFour/deerLightGreen.png","MemoryCardGame/reusables/Images/StageFour/deerDarkGreen.png","MemoryCardGame/reusables/Images/StageFour/deerLightBlue.png","MemoryCardGame/reusables/Images/StageFour/deerDarkBlue.png","MemoryCardGame/reusables/Images/StageFour/deerPink.png","MemoryCardGame/reusables/Images/StageFour/deerPurple.png","MemoryCardGame/reusables/Images/StageFour/deerWhite.png","MemoryCardGame/reusables/Images/StageFour/deerGrey.png","MemoryCardGame/reusables/Images/StageFour/deerBlack.png","MemoryCardGame/reusables/Overlay/Overlay.js","MemoryCardGame/components/FirstTimeCompenent/FirstTime.js","store/actionTypes/actionTypes.js","MemoryCardGame/reusables/LossModal/LossModal.js","MemoryCardGame/components/GameLost/GameLost.js","MemoryCardGame/components/WorldMapComponent/WorldMap.js","MemoryCardGame/reusables/gameBoard/GameBoard.js","MemoryCardGame/reusables/Shuffle/shuffle.js","MemoryCardGame/components/Stages/StageOneComponent/StageOne.js","MemoryCardGame/components/Stages/StageTwoComponent/StageTwo.js","MemoryCardGame/reusables/Timer/Timer.js","MemoryCardGame/components/Stages/StageThreeComponent/StageThree.js","MemoryCardGame/components/Stages/StageFourComponent/StageFour.js","MemoryCardGame/reusables/backToBattle/BackToBattle.js","MemoryCardGame/components/GameWon/GameWon.js","MemoryCardGame/MemoryCardGame.js","App.js","serviceWorker.js","store/reducers/overlayReducer.js","store/reducers/firstVisitReducer.js","store/reducers/instructionsReducer.js","store/reducers/stageOneReducer.js","store/reducers/stageTwoReducer.js","store/reducers/stageThreeReducer.js","store/reducers/timerReducer.js","store/reducers/stageFourReducer.js","index.js"],"names":["module","exports","connect","state","isOverlayOn","vrlyrdcr","props","overlay","className","classes","Overlay","instructionsNum","nstrctnsrdcr","instructionsNumber","dispatch","incrementInstructionNumber","type","console","log","loopInstructions","setInterval","setTimeout","clearInterval","FirstTime","WordBox","ImpHolder","Imp","src","ImpImg","alt","LossModal","LossModalBody","GameLost","GameWon","Victory","DinoHolder","SunsetDino","Sunset","PlayAgain","isStageOneComplete","stgnrdcr","isStageTwoComplete","stgtwrdcr","isStageThreeComplete","stgthrrdcr","candidate","villsArray","vills","timerInitialized","tmrrdcr","turnOffOverlay","turnOnOverlay","gameLostHandler","stageOneWords","StageOneWords","stageOne","StageOne","Frog","frog","stageTwoWords","StageTwoWords","stageTwo","StageTwo","to","style","textDecoration","sourceCandidate","Crit","Racoon","Squirrel","Goose","Dino","stageThreeWords","stageThree","StageThree","FrogHolder","heart","lossModal","length","QuestionMark","stageFourWords","isStageFourComplete","stageFour","StageFour","WorldMap","GameBoard","cardsArray","cards","gameboardClass","stage","Lost","GameBoardStageTwoLose","GameBoardStageTwo","GameBoardLose","gameboardOne","map","ele","Card","key","onClick","clicked","Image","moveUp","ImageMoveUp","moveDown","ImageMoveDown","moveRight","ImageMoveRight","moveLeft","ImageMoveLeft","gameBoardTwo","movingNum","Math","floor","random","move","animationDuration","shuffle","flashcards","currentIndex","temporaryValue","Number","randomIndex","clickedOnArray","clickedOn","isStageOneLost","stageOneLost","clickedCard","clearClickedOn","stageOneComplete","stageOneLostRevert","draftfish","draftfishBlack","draftfishBlue","draftfishDarkGreen","draftfishDarkPurple","draftfishGreen","draftfishGrey","draftfishOrange","draftfishPurple","draftfishRed","draftfishTeal","draftfishYellow","frogPhrase","gameboard","every","e","StageOneBody","SpeechBubble","speechBubble","stageTwoCompleted","becomeCandidate","name","showVills","element","sourceVill","border","VillagerHolder","Vill","Description","description","StageTwoBody","Villagers","seconds","timer","turnOffTimer","decreaseSeconds","initializeTimer","resetTimer","history","useHistory","useEffect","TimerEnded","myInterval","push","TimerContainer","isStageThreeLost","stageThreeLost","timerStarted","currentCardLayout","stageThreeComplete","stageThreeLostRevert","removeCandidate","turnOnTimer","shuffleCardsAddToState","array","value","timerIsActive","GoolWhite","GoolBlack","GoolDarkBlue","GoolDarkGreen","GoolDarkPurple","GoolLightGreen","GoolGrey","GoolOrange","GoolLightPurple","GoolRed","GoolLightBlue","GoolYellow","ImoWhite","ImoBlack","ImoDarkBlue","ImoDarkGreen","ImoDarkPurple","ImoLightGreen","ImoGrey","ImoOrange","ImoLightPurple","ImoRed","ImoLightBlue","ImoYellow","shuffleCardsAddLayoutToState","attackPhrase","oracle","OracleHolder","Oracle","CandidateHolder","StageThreeBody","stgfrrdcr","isStageFourLost","stageFourLost","hearts","stageFourLostRevert","stageFourComplete","newLife","killTheCandidate","deerRed","deerOrange","deerYellow","deerLightGreen","deerDarkGreen","deerLightBlue","deerDarkBlue","deerPink","deerPurple","deerBlack","deerWhite","deerGrey","howManyHearts","i","Heart","sunset","SunsetHolder","StageFourBody","Candidate","HeartsContainer","BackToBattle","isUserFirstVisit","frsttmvstrdcr","turnOffFirstVisit","restartGame","firstTime","worldMap","path","exact","render","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","reducer","action","firstVisitReducer","timerIsRunning","instructionsReducer","stageOnereducer","concat","stageTwoLost","stageTwoReducer","condition","candidateObject","filter","persistedState","localStorage","getItem","JSON","parse","appReducer","combineReducers","overlayReducer","stageOneReducer","stageThreeReducer","timerReducer","stageFourReducer","store","createStore","undefined","subscribe","setItem","stringify","getState","ReactDOM","StrictMode","basename","process","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0981ed1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorldMap\":\"WorldMap_WorldMap__3K-PS\",\"StageOne\":\"WorldMap_StageOne__2987j\",\"StageTwo\":\"WorldMap_StageTwo__2Mi6l\",\"StageThree\":\"WorldMap_StageThree__1Dqro\",\"StageFour\":\"WorldMap_StageFour__1GHmv\",\"Frog\":\"WorldMap_Frog__3rb46\",\"StageOneWords\":\"WorldMap_StageOneWords__VAAH0\",\"StageTwoWords\":\"WorldMap_StageTwoWords__2BidB\",\"ImpHolder\":\"WorldMap_ImpHolder__Hp4rp\",\"Imp\":\"WorldMap_Imp__2ofeN\",\"QuestionMark\":\"WorldMap_QuestionMark__bT9AU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameBoard\":\"GameBoard_GameBoard__O0q7l\",\"GameBoardLose\":\"GameBoard_GameBoardLose__1OhnP\",\"shake\":\"GameBoard_shake__3yiLG\",\"GameBoardStageTwo\":\"GameBoard_GameBoardStageTwo__2Aokz\",\"GameBoardStageTwoLose\":\"GameBoard_GameBoardStageTwoLose__10wnP\",\"Card\":\"GameBoard_Card__333wC\",\"Image\":\"GameBoard_Image__10me3\",\"ImageMoving\":\"GameBoard_ImageMoving__10ur-\",\"ImageMoveUp\":\"GameBoard_ImageMoveUp__3qmcq\",\"moveUp\":\"GameBoard_moveUp__3hJua\",\"ImageMoveDown\":\"GameBoard_ImageMoveDown__GfQeF\",\"moveDown\":\"GameBoard_moveDown__3Bj1u\",\"ImageMoveRight\":\"GameBoard_ImageMoveRight__1f_Hm\",\"moveRight\":\"GameBoard_moveRight__3sr1-\",\"ImageMoveLeft\":\"GameBoard_ImageMoveLeft__HRmH9\",\"moveLeft\":\"GameBoard_moveLeft__3Vx-1\"};","module.exports = __webpack_public_path__ + \"static/media/Imp.c33eec6e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StageFourBody\":\"StageFour_StageFourBody__jyt_P\",\"CandidateHolder\":\"StageFour_CandidateHolder__Va2lz\",\"Candidate\":\"StageFour_Candidate__2TJuk\",\"SpeechBubble\":\"StageFour_SpeechBubble__3Kfta\",\"Victory\":\"StageFour_Victory__3DX65\",\"HeartsContainer\":\"StageFour_HeartsContainer__3Z29p\",\"Heart\":\"StageFour_Heart__3QGmS\",\"SunsetHolder\":\"StageFour_SunsetHolder__30-LH\"};","module.exports = __webpack_public_path__ + \"static/media/Crit.8665bc45.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Racoon.3aa7a9b1.png\";","module.exports = __webpack_public_path__ + \"static/media/Squirrel.ad1fc6bf.png\";","module.exports = __webpack_public_path__ + \"static/media/Goose.abc36a7d.png\";","module.exports = __webpack_public_path__ + \"static/media/Dino.4c67f2f7.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StageTwoBody\":\"StageTwo_StageTwoBody__1WOn6\",\"ImpHolder\":\"StageTwo_ImpHolder__2lOmG\",\"Imp\":\"StageTwo_Imp__348Gq\",\"Villagers\":\"StageTwo_Villagers__1cAt5\",\"VillagerHolder\":\"StageTwo_VillagerHolder__Za-Nt\",\"Vill\":\"StageTwo_Vill__14xto\",\"Description\":\"StageTwo_Description__2s6ZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StageThreeBody\":\"StageThree_StageThreeBody__1nr0-\",\"CandidateHolder\":\"StageThree_CandidateHolder__1iddQ\",\"Candidate\":\"StageThree_Candidate__7UVdC\",\"SpeechBubble\":\"StageThree_SpeechBubble__1Ctzi\",\"Victory\":\"StageThree_Victory__3A2Vo\",\"OracleHolder\":\"StageThree_OracleHolder__2Zpt0\",\"swirl\":\"StageThree_swirl__2QsFK\",\"appear\":\"StageThree_appear__11aA-\"};","module.exports = __webpack_public_path__ + \"static/media/SunsetDino.4831aaf8.png\";","module.exports = __webpack_public_path__ + \"static/media/SpeechBubble.db9985df.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameWon\":\"GameLost_GameWon__LRN5u\",\"SunsetDino\":\"GameLost_SunsetDino__1xdSR\",\"DinoHolder\":\"GameLost_DinoHolder__2lZpZ\",\"Victory\":\"GameLost_Victory__1pLd4\",\"PlayAgain\":\"GameLost_PlayAgain__3iLEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StageOneBody\":\"StageOne_StageOneBody__27XxJ\",\"FrogHolder\":\"StageOne_FrogHolder__3ylfs\",\"Frog\":\"StageOne_Frog__220bE\",\"SpeechBubble\":\"StageOne_SpeechBubble__goPOU\",\"Victory\":\"StageOne_Victory__18eu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameWon\":\"GameWon_GameWon__XBpaY\",\"SunsetDino\":\"GameWon_SunsetDino__1nnmD\",\"DinoHolder\":\"GameWon_DinoHolder__2T_sS\",\"Victory\":\"GameWon_Victory__1gfmr\",\"PlayAgain\":\"GameWon_PlayAgain__3Ajpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FirstTime\":\"FirstTime_FirstTime__3J5JD\",\"ImpHolder\":\"FirstTime_ImpHolder__KFj2k\",\"Imp\":\"FirstTime_Imp__3VrQS\",\"WordBox\":\"FirstTime_WordBox__2Sozx\"};","module.exports = __webpack_public_path__ + \"static/media/Frog.ac28868e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImpHolder\":\"BackToBattle_ImpHolder__3CaoX\",\"BackToBattle\":\"BackToBattle_BackToBattle__1hAc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Overlay_Overlay__23OZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LossModalBody\":\"LossModal_LossModalBody___nlbJ\"};","module.exports = __webpack_public_path__ + \"static/media/DeerCongrats.9baac31c.png\";","module.exports = __webpack_public_path__ + \"static/media/Draftfish.25e7967e.png\";","module.exports = __webpack_public_path__ + \"static/media/DraftfishBlue.a82f6201.png\";","module.exports = __webpack_public_path__ + \"static/media/DraftfishBlack.6417961b.png\";","module.exports = __webpack_public_path__ + \"static/media/DraftfishDarkGreen.d7260455.png\";","module.exports = __webpack_public_path__ + \"static/media/DraftfishDarkPurple.4a2a4d86.png\";","module.exports = __webpack_public_path__ + \"static/media/DraftfishGreen.f6ba1909.png\";","module.exports = __webpack_public_path__ + \"static/media/DraftfishGrey.8a3b2bce.png\";","module.exports = __webpack_public_path__ + \"static/media/DraftfishOrange.f9553ff7.png\";","module.exports = __webpack_public_path__ + \"static/media/DraftfishPurple.49f35f8c.png\";","module.exports = __webpack_public_path__ + \"static/media/DraftfishRed.a3e53e97.png\";","module.exports = __webpack_public_path__ + \"static/media/DraftfishTeal.c6b2daac.png\";","module.exports = __webpack_public_path__ + \"static/media/DraftfishYellow.93ff2533.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimerContainer\":\"Timer_TimerContainer__36u0k\"};","module.exports = __webpack_public_path__ + \"static/media/Oracle.ef7f40cf.PNG\";","module.exports = __webpack_public_path__ + \"static/media/ImoWhite.192b4453.png\";","module.exports = __webpack_public_path__ + \"static/media/ImoDarkBlue.577271a4.png\";","module.exports = __webpack_public_path__ + \"static/media/ImoBlack.c6b5e573.png\";","module.exports = __webpack_public_path__ + \"static/media/ImoDarkGreen.acd10f9a.png\";","module.exports = __webpack_public_path__ + \"static/media/ImoDarkPurple.925c7d10.png\";","module.exports = __webpack_public_path__ + \"static/media/ImoLightGreen.65cce9f0.png\";","module.exports = __webpack_public_path__ + \"static/media/ImoGrey.84281963.png\";","module.exports = __webpack_public_path__ + \"static/media/ImoOrange.18ea59d8.png\";","module.exports = __webpack_public_path__ + \"static/media/ImoLightPurple.e7b619cd.png\";","module.exports = __webpack_public_path__ + \"static/media/ImoRed.d6942d60.png\";","module.exports = __webpack_public_path__ + \"static/media/ImoLightBlue.7f8ccb94.png\";","module.exports = __webpack_public_path__ + \"static/media/ImoYellow.930292ec.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolWhite.89be98c0.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolDarkBlue.1d92b06f.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolBlack.162e6b53.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolDarkGreen.230cbf4f.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolDarkPurple.00c1d663.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolLightGreen.79d0277c.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolGrey.f27db597.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolOrange.cf9516fb.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolLightPurple.a7fc7a72.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolRed.793201c5.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolLightBlue.8b317d91.png\";","module.exports = __webpack_public_path__ + \"static/media/GoolYellow.99a8f2c1.png\";","module.exports = __webpack_public_path__ + \"static/media/Heart.8ef7823a.png\";","module.exports = __webpack_public_path__ + \"static/media/deerRed.78591030.png\";","module.exports = __webpack_public_path__ + \"static/media/deerOrange.63faf8c0.png\";","module.exports = __webpack_public_path__ + \"static/media/deerYellow.19af81e0.png\";","module.exports = __webpack_public_path__ + \"static/media/deerLightGreen.cfaf462c.png\";","module.exports = __webpack_public_path__ + \"static/media/deerDarkGreen.5f0f3278.png\";","module.exports = __webpack_public_path__ + \"static/media/deerLightBlue.81e2cc24.png\";","module.exports = __webpack_public_path__ + \"static/media/deerDarkBlue.812676f4.png\";","module.exports = __webpack_public_path__ + \"static/media/deerPink.70646c65.png\";","module.exports = __webpack_public_path__ + \"static/media/deerPurple.d2875198.png\";","module.exports = __webpack_public_path__ + \"static/media/deerWhite.9b091d15.png\";","module.exports = __webpack_public_path__ + \"static/media/deerGrey.52320255.png\";","module.exports = __webpack_public_path__ + \"static/media/deerBlack.09f6ea56.png\";","import classes from './Overlay.module.css';\r\nimport React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Overlay = (props) => {\r\n\r\n    let overlay = null\r\n    if(props.isOverlayOn) {\r\n       overlay = <div className={classes.Overlay}></div>\r\n    }\r\n\r\n\r\n    return  (\r\n        <Fragment>\r\n            {overlay}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isOverlayOn: state.vrlyrdcr.isOverlayOn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Overlay);","import classes from './FirstTime.module.css';\r\nimport React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../store/actionTypes/actionTypes';\r\nimport ImpImg from '../../reusables/Images/Imp.png'\r\n\r\nconst FirstTime = (props) => {\r\n    let instructionsArray = [\r\n        'Welcome to our village',\r\n        'I\\'m Imp, but you can just call me Imp.',\r\n        'I\\'ll teach you how to play.',\r\n        'When a task needs to be finished,',\r\n        'please click each picture just once.',\r\n        'Clicking twice will reset your progress.',\r\n        'Please click on my frog friend!',\r\n        'Enjoy your adventure!'\r\n    ]\r\n\r\n\r\n    if(props.instructionsNum === 0) {\r\n        console.log(\"Test is running\")\r\n        let loopInstructions = setInterval( () => { props.incrementInstructionNumber() },3550)\r\n\r\n        setTimeout(()=> {\r\n            clearInterval(loopInstructions)\r\n        }, 35000)        \r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.FirstTime}>\r\n                <div className={classes.WordBox}>\r\n                <p>{instructionsArray[props.instructionsNum]}</p>\r\n                </div>\r\n                <div className={classes.ImpHolder}>\r\n                    <img className={classes.Imp} src={ImpImg} alt=\"Imp\"></img>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        incrementInstructionNumber: () => dispatch({type: actionTypes.INCR_INSTRUCTIONS_NUMBER})\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        instructionsNum: state.nstrctnsrdcr.instructionsNumber\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FirstTime);","export const TURN_OFF_OVERLAY = 'TURN_OFF_OVERLAY';\r\nexport const TURN_ON_OVERLAY = 'TURN_ON_OVERLAY';\r\nexport const TURN_OFF_FIRST_VISIT = \"TURN_OFF_FIRST_VISIT\";\r\nexport const INCR_INSTRUCTIONS_NUMBER = 'INCR_INSTRUCTIONS_NUMBER';\r\n//STAGE ONE\r\nexport const STAGE_ONE_CLICKED_ON = \"STAGE_ONE_CLICKED_ON\";\r\nexport const STAGE_ONE_CLEAR_CLICKED_ON = \"STAGE_ONE_CLEAR_CLICKED_ON\";\r\nexport const STAGE_ONE_COMPLETED = \"STAGE_ONE_COMPLETED\";\r\nexport const STAGE_ONE_LOST = 'STAGE_ONE_LOST';\r\nexport const STAGE_ONE_REVERT_LOST = \"STAGE_ONE_REVERT_LOST\";\r\n//Stage Two\r\nexport const STAGE_TWO_COMPLETED = \"STAGE_TWO_COMPLETED\";\r\nexport const BECOME_CANDIDATE = \"BECOME_CANDIDATE\";\r\nexport const KILL_CANDIDATE = \"KILL_CANDIDATE\";\r\n//Stage Three\r\nexport const STAGE_THREE_CLICKED_ON = \"STAGE_THREE_CLICKED_ON\";\r\nexport const STAGE_THREE_CLEAR_CLICKED_ON = \"STAGE_THREE_CLEAR_CLICKED_ON\";\r\nexport const STAGE_THREE_COMPLETED = \"STAGE_THREE_COMPLETED\";\r\nexport const STAGE_THREE_LOST = 'STAGE_THREE_LOST';\r\nexport const STAGE_THREE_REVERT_LOST = \"STAGE_THREE_REVERT_LOST\";\r\nexport const STAGE_THREE_SHUFFLE = \"STAGE_THREE_SHUFFLE\";\r\n\r\nexport const REMOVE_CANDIDATE = \"REMOVE_CANDIDATE\";\r\nexport const GAME_LOST = \"GAME_LOST\";\r\n// Timer \r\n\r\nexport const START_TIMER = \"START_TIMER\";\r\nexport const STOP_TIMER = \"STOP_TIMER\";\r\nexport const DECREASRE_SECONDS = \"DECREASE_SECONDS\";\r\nexport const INITIALIZE_TIMER = \"INITIALIZE_TIMER\";\r\nexport const RESET_TIMER = \"RESET_TIMER\"\r\n\r\n//Stage Four\r\nexport const STAGE_FOUR_CLICKED_ON = \"STAGE_FOUR_CLICKED_ON\";\r\nexport const STAGE_FOUR_CLEAR_CLICKED_ON = \"STAGE_FOUR_CLEAR_CLICKED_ON\";\r\nexport const STAGE_FOUR_COMPLETED = \"STAGE_FOUR_COMPLETED\";\r\nexport const STAGE_FOUR_LOST = 'STAGE_FOUR_LOST';\r\nexport const STAGE_FOUR_REVERT_LOST = \"STAGE_FOUR_REVERT_LOST\";\r\nexport const STAGE_FOUR_SHUFFLE = \"STAGE_FOUR_SHUFFLE\";\r\nexport const STAGE_FOUR_NEW_LIFE = 'STAGE_FOUR_NEW_LIFE';","import classes from './LossModal.module.css';\r\nimport React from 'react';\r\n\r\nconst LossModal = (props) => {\r\n\r\n    \r\n\r\n    return (<div className={classes.LossModalBody}>\r\n        <p>Your character has been defeated</p> \r\n        <p>Your progress has not been lost!</p> \r\n        <p>Please choose a new leader</p>\r\n    </div>)\r\n}\r\n\r\nexport default LossModal;","import React from 'react';\r\nimport classes from './GameLost.module.css';\r\nimport Sunset from '../../reusables/Images/SunsetDino.png';\r\n\r\n\r\n\r\n\r\nconst GameLost = () => {\r\n    return (\r\n        <div className={classes.GameWon}>\r\n            <p className={classes.Victory}>Defeat</p>\r\n            <div className={classes.DinoHolder}>\r\n                <img className={classes.SunsetDino} src={Sunset} alt=\"Sunset\" ></img>\r\n                <p className={classes.PlayAgain}>You lose. You may not pass go. You may <strong>not</strong> collect 200 dollars.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GameLost;","import classes from './WorldMap.module.css';\r\nimport React, { Fragment} from 'react';\r\nimport {  Link, useHistory } from 'react-router-dom';\r\nimport frog from '../../reusables/Images/StageOne/Frog.png';\r\nimport Imp from '../../reusables/Images/Imp.png';\r\nimport Crit from '../../reusables/Images/StageTwo/Crit.PNG'\r\nimport Racoon from '../../reusables/Images/StageTwo/Racoon.png'\r\nimport Squirrel from '../../reusables/Images/StageTwo/Squirrel.png'\r\nimport Goose from '../../reusables/Images/StageTwo/Goose.png'\r\nimport Dino from '../../reusables/Images/StageTwo/Dino.png'\r\nimport { connect } from 'react-redux';\r\nimport LossModal from '../../reusables/LossModal/LossModal';\r\nimport Overlay from '../../reusables/Overlay/Overlay';\r\nimport * as actionTypes from '../../../store/actionTypes/actionTypes';\r\nimport GameLost from '../GameLost/GameLost';\r\nimport heart from '../../reusables/Images/DeerCongrats.png';\r\n\r\nconst WorldMap = (props) => {\r\n    \r\n\r\n        \r\n\r\n\r\n\r\n    let stageOneWords = props.isStageOneComplete ? <div className={classes.StageOneWords}>\r\n                            <p>Well done!</p>\r\n                            <p>Enough fish have been collected.</p>\r\n                        </div> :\r\n                        <div className={classes.StageOneWords}>\r\n                            <p>New Stage!</p>\r\n                            <p>Help the frog collect fish for the village.</p>\r\n                         </div>\r\n\r\n    let stageOne = <div className={classes.StageOne}>\r\n                        <div className={classes.Frog}>\r\n                            <img src={frog} alt='frog'></img>\r\n                        </div>\r\n                        {stageOneWords}\r\n                    </div>\r\n\r\n    let stageTwoWords = props.isStageTwoComplete ? <div className={classes.StageTwoWords}>\r\n                            <p>Enter the village.</p>\r\n                            <p>Choose someone to lead the battle.</p>\r\n                        </div> :\r\n                        <div className={classes.StageTwoWords}>\r\n                            <p>New Stage!</p>\r\n                            <p>Enter the village and meet your new friends!</p>\r\n                         </div>\r\n\r\n    let stageTwo = <div className={classes.StageTwo}>\r\n                        <div className={classes.ImpHolder}>\r\n                            <img className={classes.Imp} src={Imp} alt='Imp'></img>\r\n                        </div>\r\n                        {stageTwoWords}\r\n                    </div>\r\n\r\n        stageTwo = props.isStageOneComplete ? < Link to=\"/StageTwo\" style={{textDecoration: 'none'}} >{stageTwo}</Link> : <div className={classes.StageTwo}></div>\r\n\r\n\r\n        let sourceCandidate = null\r\n\r\n        switch (props.candidate) {\r\n            case 'Crit':\r\n                sourceCandidate = Crit\r\n                break;\r\n            case 'Racoon':\r\n                sourceCandidate = Racoon\r\n                break;\r\n            case 'Squirrel':\r\n                sourceCandidate = Squirrel\r\n                break;\r\n            case 'Goose':\r\n                sourceCandidate = Goose\r\n                break;\r\n            case 'Dino':\r\n                sourceCandidate = Dino\r\n                break;\r\n        \r\n            default:\r\n                sourceCandidate = Imp\r\n                break;\r\n        }\r\n         let stageThreeWords = props.isStageThreeComplete ? <div className={classes.StageTwoWords}>\r\n                            <p>The village is saved!</p>\r\n                            <p>It is time to go on the offensive!</p>\r\n                        </div> :\r\n                        <div className={classes.StageTwoWords}>\r\n                            <p>The village is under attack!</p>\r\n                            <p>The battle must not last longer than 2 minutes!</p>\r\n                         </div>\r\n\r\n        let stageThree =    <div className={classes.StageThree}>\r\n                        <div className={classes.FrogHolder}>\r\n                            <img className={classes.Frog} src={ props.isStageThreeComplete ? heart : sourceCandidate} alt='Imp'></img>\r\n                        </div>\r\n                                {stageThreeWords}\r\n                            </div>\r\n\r\n        stageThree = props.isStageTwoComplete && props.candidate ? < Link to=\"/StageThree\" style={{textDecoration: 'none'}}>{stageThree} </Link> : <div className={classes.StageThree}></div>\r\n        \r\n\r\n        let overlay = <Overlay />\r\n        let lossModal = null\r\n        if(!props.candidate && props.isStageTwoComplete && props.villsArray.length !== 0 && props.villsArray.length !== 5){\r\n            lossModal = <Link to='/StageTwo' > <LossModal /> </Link>\r\n            props.turnOnOverlay();\r\n\r\n        }\r\n        if(props.candidate) {\r\n            props.turnOffOverlay();\r\n        }\r\n        if(!props.candidate && props.villsArray.length === 5 && props.isStageTwoComplete) {\r\n            props.turnOffOverlay();\r\n            stageThree = <div className={classes.StageThree}>\r\n            <div className={classes.QuestionMark}>?\r\n            </div>\r\n            <div className={classes.StageTwoWords}>\r\n                            <p>Choose someone to lead from the village!</p>\r\n                        </div>\r\n                    \r\n                </div>\r\n        }\r\n\r\n        \r\n\r\n        if(props.villsArray.length === 0) {\r\n            props.turnOnOverlay();\r\n            lossModal = <GameLost />\r\n            setTimeout(props.gameLostHandler, 5000)\r\n        }\r\n\r\n        let stageFourWords = props.isStageFourComplete ? <div className={classes.StageTwoWords}>\r\n                                    <p>You defeated the sunset Dino!</p>\r\n                                </div> :\r\n                                <div className={classes.StageTwoWords}>\r\n                                    <p>Get in there and fight!</p>\r\n                                    <p>You have four attempts.</p>\r\n                                </div>\r\n\r\n                let stageFour =    <div className={classes.StageFour}>\r\n                                <div className={classes.FrogHolder}>\r\n                                    <img className={classes.Frog} src={sourceCandidate} alt='Imp'></img>\r\n                                </div>\r\n                                        {stageFourWords}\r\n                                    </div>\r\n\r\n                stageFour = props.isStageThreeComplete && props.candidate ? < Link to=\"/StageFour\" style={{textDecoration: 'none'}}>{stageFour} </Link> : <div className={classes.StageFour}></div>\r\n        \r\n\r\n        \r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.WorldMap}>\r\n                < Link to=\"/StageOne\" style={{textDecoration: 'none'}} >{stageOne}</Link>\r\n\r\n                {stageTwo}\r\n                {stageThree}\r\n                {stageFour}\r\n                {lossModal}\r\n                {overlay}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isStageOneComplete: state.stgnrdcr.isStageOneComplete,\r\n        isStageTwoComplete: state.stgtwrdcr.isStageTwoComplete,\r\n        isStageThreeComplete: state.stgthrrdcr.isStageThreeComplete,\r\n        candidate: state.stgtwrdcr.candidate,\r\n        villsArray: state.stgtwrdcr.vills,\r\n        timerInitialized: state.tmrrdcr.timerInitialized\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        turnOffOverlay: () => dispatch({type: actionTypes.TURN_OFF_OVERLAY}),\r\n        turnOnOverlay: () => dispatch({type: actionTypes.TURN_ON_OVERLAY}),\r\n        gameLostHandler: () => dispatch({type: actionTypes.GAME_LOST})\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorldMap);","import classes from './GameBoard.module.css';\r\nimport React from 'react';\r\n\r\nconst GameBoard = (props) => {\r\n\r\n    let cardsArray = [...props.cards];\r\n\r\n    let gameboardClass = props.stage === '2' ? props.Lost ? classes.GameBoardStageTwoLose : classes.GameBoardStageTwo : props.Lost ? classes.GameBoardLose : classes.GameBoard\r\n\r\n\r\n    let gameboardOne =(\r\n        <div className={gameboardClass}>\r\n            {cardsArray.map((ele) =>{\r\n                return (<div \r\n                            className={classes.Card}\r\n                            key={ele} \r\n                            onClick={() => {\r\n                            props.clicked(ele)\r\n                        }}>\r\n                            <img alt='fish' className={classes.Image} src={ele}></img>\r\n                        </div>  \r\n                )\r\n            })}\r\n        </div>)\r\n    \r\n    let moveUp = classes.ImageMoveUp\r\n    let moveDown = classes.ImageMoveDown\r\n    let moveRight = classes.ImageMoveRight\r\n    let moveLeft = classes.ImageMoveLeft\r\n    \r\n    let gameBoardTwo = (\r\n        <div className={gameboardClass}>\r\n            {cardsArray.map((ele) =>{\r\n                let movingNum = Math.floor(Math.random()*4 + 1)\r\n                let move = movingNum === 1 ? moveUp : movingNum === 2 ? moveDown : movingNum === 3 ? moveRight : moveLeft\r\n                return (<div \r\n                        className={classes.Card}\r\n                        key={ele} \r\n                        onClick={() => {\r\n                        props.clicked(ele)\r\n                    }}>\r\n                        <img alt='deer' className={move} src={ele} style={\r\n                            {\r\n                                animationDuration: Math.floor(Math.random()*8 + 1)   + 's'\r\n                                \r\n                            }\r\n                        }></img>\r\n                    </div>  \r\n                )\r\n            })}\r\n        </div>)\r\n    \r\n    let theGameBoard = props.stage === '4' ? gameBoardTwo : gameboardOne\r\n\r\n    return (\r\n        theGameBoard\r\n    )\r\n}\r\n\r\n\r\nexport default GameBoard;","const shuffle = (flashcards) => {\r\n    let currentIndex = flashcards.length\r\n    let temporaryValue = Number;\r\n    let randomIndex = Number;\r\n\r\n    while(currentIndex !== 0) {\r\n        randomIndex = Math.floor(Math.random()*currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        temporaryValue = flashcards[currentIndex]\r\n        flashcards[currentIndex] = flashcards[randomIndex]\r\n        flashcards[randomIndex] = temporaryValue\r\n    }\r\n\r\n    return flashcards\r\n}\r\n\r\nexport default shuffle","import classes from './StageOne.module.css';\r\nimport React from 'react';\r\nimport GameBoard from '../../../reusables/gameBoard/GameBoard';\r\nimport shuffle from '../../../reusables/Shuffle/shuffle';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../../store/actionTypes/actionTypes';\r\n\r\nimport draftfish from '../../../reusables/Images/StageOne/Draftfish.png';\r\nimport draftfishBlue from '../../../reusables/Images/StageOne/DraftfishBlue.png';\r\nimport draftfishBlack from '../../../reusables/Images/StageOne/DraftfishBlack.png';\r\nimport draftfishDarkGreen from '../../../reusables/Images/StageOne/DraftfishDarkGreen.png';\r\nimport draftfishDarkPurple from '../../../reusables/Images/StageOne/DraftfishDarkPurple.png';\r\nimport draftfishGreen from '../../../reusables/Images/StageOne/DraftfishGreen.png';\r\nimport draftfishGrey from '../../../reusables/Images/StageOne/DraftfishGrey.png';\r\nimport draftfishOrange from '../../../reusables/Images/StageOne/DraftfishOrange.png';\r\nimport draftfishPurple from '../../../reusables/Images/StageOne/DraftfishPurple.png';\r\nimport draftfishRed from '../../../reusables/Images/StageOne/DraftfishRed.png';\r\nimport draftfishTeal from '../../../reusables/Images/StageOne/DraftfishTeal.png';\r\nimport draftfishYellow from '../../../reusables/Images/StageOne/DraftfishYellow.png';\r\nimport frog from '../../../reusables/Images/StageOne/Frog.png';\r\nimport speechBubble from '../../../reusables/Images/SpeechBubble.png';\r\nimport { Link } from 'react-router-dom';\r\n \r\n\r\nconst StageOne = (props) => {\r\n\r\n\r\n    let cardsArray = [draftfish, draftfishBlack, draftfishBlue, draftfishDarkGreen, draftfishDarkPurple, draftfishGreen, draftfishGrey,\r\n                        draftfishOrange, draftfishPurple, draftfishRed, draftfishTeal, draftfishYellow\r\n    ]\r\n    \r\n    cardsArray = shuffle(cardsArray)\r\n    \r\n    let frogPhrase = props.isStageOneComplete ? 'Thank you!' : 'Help me catch each fish!'\r\n    let stageOneLost = props.isStageOneLost ? true : false\r\n    \r\n    const lose = () => {\r\n        props.clearClickedOn();\r\n        props.stageOneLost();\r\n        setTimeout(props.stageOneLostRevert, 1500)\r\n    }\r\n\r\n    const winCondition = () => {\r\n        props.clearClickedOn();\r\n        props.stageOneComplete();\r\n        \r\n    }\r\n\r\n    let addCardToState = (ele) => {\r\n        props.clickedOnArray.every((e) => e !== ele) ? props.clickedOnArray.length === cardsArray.length-1 ? winCondition() : props.clickedOn(ele) : lose();\r\n\r\n    }\r\n\r\n    let gameboard = <GameBoard cards={cardsArray} clicked={addCardToState} Lost={stageOneLost} stage='1' />;\r\n\r\n    if(props.isStageOneComplete){\r\n        gameboard = <div className={classes.Victory}>Well done! <br /> The village will not starve!</div>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.StageOneBody}>\r\n            <div>\r\n                <div className={classes.FrogHolder}>\r\n                    <Link to='/'>\r\n                        <img className={classes.Frog} src={frog} alt='frog'></img>\r\n                    </Link>\r\n                </div>\r\n                <div className={classes.SpeechBubble}><img src={ speechBubble} alt='speechbub'></img><p>{frogPhrase}<br></br>Click me to go home.</p></div>\r\n            </div>\r\n            {gameboard}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isStageOneComplete: state.stgnrdcr.isStageOneComplete,\r\n        clickedOnArray: state.stgnrdcr.clickedOn,\r\n        isStageOneLost: state.stgnrdcr.stageOneLost\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clickedOn: (ele) => dispatch({type: actionTypes.STAGE_ONE_CLICKED_ON, clickedCard: ele}),\r\n        clearClickedOn: () => dispatch({type: actionTypes.STAGE_ONE_CLEAR_CLICKED_ON}),\r\n        stageOneComplete: () => dispatch({type: actionTypes.STAGE_ONE_COMPLETED}),\r\n        stageOneLost: () => dispatch({type: actionTypes.STAGE_ONE_LOST}),\r\n        stageOneLostRevert: () => dispatch({type: actionTypes.STAGE_ONE_REVERT_LOST})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StageOne);","import React from 'react';\r\nimport classes from './StageTwo.module.css';\r\nimport { connect } from 'react-redux';\r\nimport Crit from '../../../reusables/Images/StageTwo/Crit.PNG'\r\nimport Racoon from '../../../reusables/Images/StageTwo/Racoon.png'\r\nimport Squirrel from '../../../reusables/Images/StageTwo/Squirrel.png'\r\nimport Goose from '../../../reusables/Images/StageTwo/Goose.png'\r\nimport Dino from '../../../reusables/Images/StageTwo/Dino.png'\r\nimport Imp from '../../../reusables/Images/Imp.png'\r\nimport { Link } from 'react-router-dom';\r\nimport * as actionTypes from '../../../../store/actionTypes/actionTypes';\r\n\r\n\r\nconst StageTwo = (props) => {\r\n\r\n    \r\n\r\n    let vills = [...props.vills];\r\n\r\n    let showVills = vills.map((element) => {\r\n\r\n        let sourceVill = null;\r\n\r\n        switch (element.name) {\r\n            case 'Crit':\r\n                sourceVill = Crit\r\n                break;\r\n            case 'Racoon':\r\n                sourceVill = Racoon\r\n                break;\r\n            case 'Squirrel':\r\n                sourceVill = Squirrel\r\n                break;\r\n            case 'Goose':\r\n                sourceVill = Goose\r\n                break;\r\n            case 'Dino':\r\n                sourceVill = Dino\r\n                break;\r\n        \r\n            default:\r\n                sourceVill = null\r\n                break;\r\n        }\r\n\r\n        let border = props.candidate === element.name ?  '2px solid green' :  null\r\n        return (\r\n            <div key={sourceVill} className={classes.VillagerHolder}>\r\n                <img  className={classes.Vill} src={sourceVill} alt={element.name} onClick={() => {props.becomeCandidate(element.name)}}  style={{\r\n                    border: border\r\n                }} />\r\n                <p className={classes.Description}>{element.description}</p>\r\n            </div>\r\n        )\r\n    })\r\n    \r\n\r\n    return (\r\n        <div className={classes.StageTwoBody}>\r\n            \r\n            <div className={classes.ImpHolder}>\r\n            <Link to='/'><img className={classes.Imp} src={Imp} onClick={props.stageTwoCompleted} alt=\"Imp\"></img></Link>\r\n                <p>{props.isStageTwoComplete ? 'Choose someone to lead the defense!' : 'These are my friends. Say hello!'}</p>\r\n            </div>\r\n            <div className={classes.Villagers}>\r\n                {showVills}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        vills: state.stgtwrdcr.vills,\r\n        isStageTwoComplete: state.stgtwrdcr.isStageTwoComplete,\r\n        candidate: state.stgtwrdcr.candidate\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        stageTwoCompleted: () => dispatch({type: actionTypes.STAGE_TWO_COMPLETED}),\r\n        becomeCandidate: (name) => dispatch({type: actionTypes.BECOME_CANDIDATE, name: name}) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StageTwo)","import React, {  useEffect } from 'react';\r\nimport classes from './Timer.module.css';\r\nimport { connect } from 'react-redux'\r\nimport { useHistory} from 'react-router-dom';\r\n\r\nimport * as actionTypes from '../../../store/actionTypes/actionTypes'; \r\n\r\n\r\nconst Timer = (props) => {\r\n    const history = useHistory();\r\n\r\n    \r\n        useEffect(() => {\r\n            if(props.candidate) {\r\n                if(props.timerInitialized){\r\n                    if(props.seconds <= 0) {\r\n                        props.TimerEnded();\r\n                    }\r\n                } else {\r\n                    props.initializeTimer();\r\n                        let myInterval = setInterval(()=> {\r\n                                                props.decreaseSeconds();\r\n                                        }, 1000)\r\n                        setTimeout(()=> {\r\n                            clearInterval(myInterval)\r\n                            props.turnOffTimer();\r\n                        }, 61000)\r\n                }\r\n            } else {\r\n                history.push('/StageTwo')\r\n            }\r\n        })\r\n    \r\n    \r\n    \r\n\r\n    \r\n    return (\r\n        <div className={classes.TimerContainer}>{props.seconds}</div>)\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        seconds: state.tmrrdcr.timer,\r\n        timerInitialized: state.tmrrdcr.timerInitialized,\r\n        candidate: state.stgtwrdcr.candidate\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        turnOffTimer: () => dispatch({type: actionTypes.STOP_TIMER}),\r\n        decreaseSeconds: () => dispatch({type: actionTypes.DECREASRE_SECONDS}),\r\n        initializeTimer: () => dispatch({type: actionTypes.INITIALIZE_TIMER}),\r\n        resetTimer: () => dispatch({type: actionTypes.RESET_TIMER})\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","import React from 'react';\r\nimport classes from './StageThree.module.css';\r\nimport * as actionTypes from '../../../../store/actionTypes/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Crit from '../../../reusables/Images/StageTwo/Crit.PNG'\r\nimport Racoon from '../../../reusables/Images/StageTwo/Racoon.png'\r\nimport Squirrel from '../../../reusables/Images/StageTwo/Squirrel.png'\r\nimport Goose from '../../../reusables/Images/StageTwo/Goose.png'\r\nimport Dino from '../../../reusables/Images/StageTwo/Dino.png'\r\nimport speechBubble from '../../../reusables/Images/SpeechBubble.png'\r\nimport Gameboard from '../../../reusables/gameBoard/GameBoard';\r\nimport shuffle from '../../../reusables/Shuffle/shuffle';\r\nimport Timer from '../../../reusables/Timer/Timer';\r\nimport Oracle from '../../../reusables/Images/StageThree/Oracle.PNG';\r\n\r\n//IMOS\r\nimport ImoWhite from '../../../reusables/Images/StageThree/ImoWhite.png';\r\nimport ImoDarkBlue from '../../../reusables/Images/StageThree/ImoDarkBlue.png';\r\nimport ImoBlack from '../../../reusables/Images/StageThree/ImoBlack.png';\r\nimport ImoDarkGreen from '../../../reusables/Images/StageThree/ImoDarkGreen.png';\r\nimport ImoDarkPurple from '../../../reusables/Images/StageThree/ImoDarkPurple.png';\r\nimport ImoLightGreen from '../../../reusables/Images/StageThree/ImoLightGreen.png';\r\nimport ImoGrey from '../../../reusables/Images/StageThree/ImoGrey.png';\r\nimport ImoOrange from '../../../reusables/Images/StageThree/ImoOrange.png';\r\nimport ImoLightPurple from '../../../reusables/Images/StageThree/ImoLightPurple.png';\r\nimport ImoRed from '../../../reusables/Images/StageThree/ImoRed.png';\r\nimport ImoLightBlue from '../../../reusables/Images/StageThree/ImoLightBlue.png';\r\nimport ImoYellow from '../../../reusables/Images/StageThree/ImoYellow.png';\r\n//GOOLS\r\nimport GoolWhite from '../../../reusables/Images/StageThree/GoolWhite.png';\r\nimport GoolDarkBlue from '../../../reusables/Images/StageThree/GoolDarkBlue.png';\r\nimport GoolBlack from '../../../reusables/Images/StageThree/GoolBlack.png';\r\nimport GoolDarkGreen from '../../../reusables/Images/StageThree/GoolDarkGreen.png';\r\nimport GoolDarkPurple from '../../../reusables/Images/StageThree/GoolDarkPurple.png';\r\nimport GoolLightGreen from '../../../reusables/Images/StageThree/GoolLightGreen.png';\r\nimport GoolGrey from '../../../reusables/Images/StageThree/GoolGrey.png';\r\nimport GoolOrange from '../../../reusables/Images/StageThree/GoolOrange.png';\r\nimport GoolLightPurple from '../../../reusables/Images/StageThree/GoolLightPurple.png';\r\nimport GoolRed from '../../../reusables/Images/StageThree/GoolRed.png';\r\nimport GoolLightBlue from '../../../reusables/Images/StageThree/GoolLightBlue.png';\r\nimport GoolYellow from '../../../reusables/Images/StageThree/GoolYellow.png';\r\nimport { Fragment } from 'react';\r\n\r\n\r\nconst StageThree = (props) => {\r\n    let timer = null\r\n\r\n    \r\n    \r\n    const history = useHistory();\r\n\r\n    \r\n    \r\n    const timerEnded = () => {\r\n        history.push('/')\r\n        console.log(\"[StageThree.js] the current state timer seconds is at:  \" + props.seconds)\r\n        props.removeCandidate();\r\n        props.resetTimer();\r\n        \r\n    }\r\n\r\n\r\n    let timerIsActive = props.timerStarted\r\n    if(!timerIsActive){\r\n        props.turnOnTimer();\r\n    }\r\n    if(timerIsActive) {\r\n        timer =<Timer TimerEnded={timerEnded} />\r\n    }\r\n\r\n    let cardsArray = props.currentCardLayout.length === 0 ? [GoolWhite, GoolBlack, GoolDarkBlue, GoolDarkGreen, GoolDarkPurple, GoolLightGreen, GoolGrey,\r\n        GoolOrange, GoolLightPurple, GoolRed, GoolLightBlue, GoolYellow, ImoWhite, ImoBlack, ImoDarkBlue, ImoDarkGreen, ImoDarkPurple, ImoLightGreen, ImoGrey,\r\n        ImoOrange, ImoLightPurple, ImoRed, ImoLightBlue, ImoYellow\r\n    ] : props.currentCardLayout\r\n\r\n    const shuffleCardsAddLayoutToState = (ele) => {\r\n        cardsArray = shuffle(cardsArray)\r\n        props.shuffleCardsAddToState(cardsArray)\r\n        props.clickedOn(ele)\r\n    }\r\n    if(props.currentCardLayout.length === 0){\r\n        console.log('[StageThree.js]  IS the lenght getting here?' + props.currentCardLayout.length)\r\n        shuffleCardsAddLayoutToState();\r\n    }\r\n\r\n    const lose = () => {\r\n        props.clearClickedOn();\r\n        props.stageThreeLost();\r\n        setTimeout(() =>{\r\n            props.stageThreeLostRevert();\r\n            \r\n        }, 1500)\r\n    }\r\n\r\n    const winCondition = () => {\r\n        props.clearClickedOn();\r\n        props.stageThreeComplete();\r\n        props.resetTimer();\r\n    }\r\n\r\n    let addCardToState = (ele) => {\r\n        props.clickedOnArray.every((e) => e !== ele) ? props.clickedOnArray.length === cardsArray.length-1 ? winCondition() : shuffleCardsAddLayoutToState(ele) : lose();\r\n    }\r\n    let stageThreeLost = props.isStageThreeLost ? true : false\r\n\r\n    let gameboard = <Gameboard cards={cardsArray} Lost={stageThreeLost} stage='2' clicked={addCardToState} />\r\n    if(props.isStageThreeComplete) {\r\n        gameboard = <div className={classes.Victory}>Well done! <br /> The oracle has been defeated!</div>\r\n    }\r\n\r\n\r\n    let sourceCandidate = null;\r\n    let attackPhrase = null\r\n\r\n        switch (props.candidate) {\r\n            case 'Crit':\r\n                sourceCandidate = Crit\r\n                attackPhrase = ' Finish this quick. I have a stick to attend to. '\r\n                break;\r\n            case 'Racoon':\r\n                sourceCandidate = Racoon\r\n                attackPhrase = 'Let\\'s get\\'em! '\r\n                break;\r\n            case 'Squirrel':\r\n                sourceCandidate = Squirrel\r\n                attackPhrase = 'I don\\'t think they want to play with us. '\r\n                break;\r\n            case 'Goose':\r\n                sourceCandidate = Goose\r\n                attackPhrase = 'Just imminent danger, in the middle of it me!'\r\n                break;\r\n            case 'Dino':\r\n                sourceCandidate = Dino\r\n                attackPhrase = '  Maybe they know where Sunset is...'\r\n                break;\r\n        \r\n            default:\r\n                sourceCandidate = null\r\n                attackPhrase = null\r\n                break;\r\n        }\r\n        \r\n    \r\n        if(props.isStageThreeComplete){\r\n            timer = null\r\n        }\r\n\r\n        let oracle = <div className={classes.OracleHolder}>\r\n        <img src={Oracle} alt='oracle'></img>\r\n    </div>\r\n        let candidate = <img  className={classes.CandidateHolder} src={sourceCandidate} alt='candidate'></img>\r\n        if(props.isStageThreeComplete){\r\n            oracle = null\r\n            candidate = <Link to='/'>\r\n            <img  className={classes.CandidateHolder} src={sourceCandidate} alt='candidate'></img>\r\n            </Link>\r\n        }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.StageThreeBody}>\r\n                <div>\r\n                \r\n                    <div className={classes.CandidateHolder} >\r\n                        {candidate}\r\n                    </div>\r\n                \r\n                    <div className={classes.SpeechBubble}>\r\n                        <img src={ speechBubble} alt='speechbub'></img>\r\n                        <p>{attackPhrase}</p>\r\n                    </div>\r\n                    {oracle}\r\n                    \r\n                \r\n                </div>\r\n            {gameboard}\r\n            {timer}\r\n            </div>\r\n            \r\n        </Fragment>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isStageThreeComplete: state.stgthrrdcr.isStageThreeComplete,\r\n        candidate: state.stgtwrdcr.candidate,\r\n        isStageThreeLost: state.stgthrrdcr.stageThreeLost,\r\n        clickedOnArray: state.stgthrrdcr.clickedOn,\r\n        seconds: state.tmrrdcr.timer,\r\n        timerStarted: state.tmrrdcr.timerStarted,\r\n        currentCardLayout: state.stgthrrdcr.currentCardLayout\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clickedOn: (ele) => dispatch({type: actionTypes.STAGE_THREE_CLICKED_ON, clickedCard: ele}),\r\n        clearClickedOn: () => dispatch({type: actionTypes.STAGE_THREE_CLEAR_CLICKED_ON}),\r\n        stageThreeComplete: () => dispatch({type: actionTypes.STAGE_THREE_COMPLETED}),\r\n        stageThreeLost: () => dispatch({type: actionTypes.STAGE_THREE_LOST}),\r\n        stageThreeLostRevert: () => dispatch({type: actionTypes.STAGE_THREE_REVERT_LOST}),\r\n        removeCandidate: () => dispatch({type: actionTypes.REMOVE_CANDIDATE}),\r\n        turnOnTimer: () => dispatch({type: actionTypes.START_TIMER}),\r\n        turnOffTimer: () => dispatch({type: actionTypes.STOP_TIMER}),\r\n        resetTimer: () => dispatch({type: actionTypes.RESET_TIMER}),\r\n        shuffleCardsAddToState: (array) => dispatch({type: actionTypes.STAGE_THREE_SHUFFLE, value: array})\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StageThree)\r\n","import React from 'react';\r\nimport classes from './StageFour.module.css';\r\nimport * as actionTypes from '../../../../store/actionTypes/actionTypes';\r\nimport { connect } from 'react-redux';\r\nimport Crit from '../../../reusables/Images/StageTwo/Crit.PNG'\r\nimport Racoon from '../../../reusables/Images/StageTwo/Racoon.png'\r\nimport Squirrel from '../../../reusables/Images/StageTwo/Squirrel.png'\r\nimport Goose from '../../../reusables/Images/StageTwo/Goose.png'\r\nimport Dino from '../../../reusables/Images/StageTwo/Dino.png';\r\nimport Gameboard from '../../../reusables/gameBoard/GameBoard';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport shuffle from '../../../reusables/Shuffle/shuffle';\r\nimport speechBubble from '../../../reusables/Images/SpeechBubble.png'\r\nimport heart from '../../../reusables/Images/Heart.png'\r\nimport Sunset from '../../../reusables/Images/SunsetDino.png'\r\n//Deer\r\nimport deerRed from '../../../reusables/Images/StageFour/deerRed.png'\r\nimport deerOrange from '../../../reusables/Images/StageFour/deerOrange.png'\r\nimport deerYellow from '../../../reusables/Images/StageFour/deerYellow.png'\r\nimport deerLightGreen from '../../../reusables/Images/StageFour/deerLightGreen.png'\r\nimport deerDarkGreen from '../../../reusables/Images/StageFour/deerDarkGreen.png'\r\nimport deerLightBlue from '../../../reusables/Images/StageFour/deerLightBlue.png'\r\nimport deerDarkBlue from '../../../reusables/Images/StageFour/deerDarkBlue.png'\r\nimport deerPink from '../../../reusables/Images/StageFour/deerPink.png'\r\nimport deerPurple from '../../../reusables/Images/StageFour/deerPurple.png';\r\nimport deerWhite from '../../../reusables/Images/StageFour/deerWhite.png'\r\nimport deerGrey from '../../../reusables/Images/StageFour/deerGrey.png'\r\nimport deerBlack from '../../../reusables/Images/StageFour/deerBlack.png'\r\n\r\nconst StageFour = (props) => {\r\n    const history = useHistory();\r\n\r\n    let sourceCandidate = null;\r\n    let attackPhrase = null\r\n\r\n        switch (props.candidate) {\r\n            case 'Crit':\r\n                sourceCandidate = Crit\r\n                attackPhrase = 'Time to swing my stick.'\r\n                break;\r\n            case 'Racoon':\r\n                sourceCandidate = Racoon\r\n                attackPhrase = 'LAY ON!'\r\n                break;\r\n            case 'Squirrel':\r\n                sourceCandidate = Squirrel\r\n                attackPhrase = 'We\\'ll teach them how to play. '\r\n                break;\r\n            case 'Goose':\r\n                sourceCandidate = Goose\r\n                attackPhrase = 'I\\'m gunna give them the hammer!'\r\n                break;\r\n            case 'Dino':\r\n                sourceCandidate = Dino\r\n                attackPhrase = 'Sunset...Why?'\r\n                break;\r\n        \r\n            default:\r\n                sourceCandidate = null\r\n                attackPhrase = null\r\n                break;\r\n        }\r\n        \r\n\r\n        const killTheCandidate = () => {\r\n            if(props.isStageThreeComplete && !props.isStageFourComplete){\r\n                props.removeCandidate();\r\n                props.newLife();\r\n            }\r\n        }\r\n        if(props.hearts <= 0){\r\n            killTheCandidate();\r\n            history.push('/');\r\n            \r\n        }\r\n        let cardsArray = props.currentCardLayout.length === 0 ? [deerRed, deerOrange, deerYellow, deerLightGreen, deerDarkGreen, deerLightBlue,\r\n            deerDarkBlue, deerPink, deerPurple, deerBlack, deerWhite, deerGrey\r\n        ] : props.currentCardLayout\r\n\r\n        const shuffleCardsAddLayoutToState = (ele) => {\r\n            cardsArray = shuffle(cardsArray)\r\n            props.shuffleCardsAddToState(cardsArray)\r\n            props.clickedOn(ele)\r\n        }\r\n        const lose = () => {\r\n            props.clearClickedOn();\r\n            props.stageFourLost();\r\n            setTimeout(() =>{\r\n                props.stageFourLostRevert();\r\n            }, 1500)\r\n        }\r\n        const winCondition = () => {\r\n            props.clearClickedOn();\r\n            props.stageFourComplete();\r\n        }\r\n\r\n        let addCardToState = (ele) => {\r\n            props.clickedOnArray.every((e) => e !== ele) ? props.clickedOnArray.length === cardsArray.length-1 ? winCondition() : shuffleCardsAddLayoutToState(ele) : lose();\r\n        }\r\n        let stageFourLost = props.isStageFourLost ? true : false\r\n        let gameboard = <Gameboard cards={cardsArray} Lost={stageFourLost} stage='4' clicked={addCardToState}  />\r\n        if(props.isStageFourComplete) {\r\n            gameboard = <div className={classes.Victory}>Well done! <br /> Sunset has been defeated!</div>\r\n        }\r\n        console.log('[StageFour.js ] hearts left ' + props.hearts)\r\n\r\n        let howManyHearts = []\r\n        \r\n        for(let i=0; i<props.hearts; i++) {\r\n            howManyHearts.push(<img src={heart} className={classes.Heart} key={i} />)\r\n        }\r\n\r\n        let sunset = <div className={classes.SunsetHolder}>\r\n                            <img src={Sunset} alt='sunset'></img>\r\n                     </div>\r\n\r\n\r\n    return( <div className={classes.StageFourBody}>\r\n                        <div className={classes.CandidateHolder}>\r\n                            <Link to='/'>\r\n                            <img onClick={killTheCandidate} className={classes.Candidate} src={sourceCandidate} alt='candidate'></img>                                </Link>\r\n                        </div>\r\n                        <div className={classes.SpeechBubble}>\r\n                            <img src={ speechBubble} alt='speechbub'></img>\r\n                            <p>{attackPhrase}</p>\r\n                        </div>\r\n                        <div className={classes.HeartsContainer}>\r\n                            {howManyHearts.map((ele) => ele)}\r\n                        </div>\r\n                        {sunset}\r\n        {gameboard}\r\n\r\n    </div>)\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        candidate: state.stgtwrdcr.candidate,\r\n        isStageThreeComplete: state.stgthrrdcr.isStageThreeComplete,\r\n        currentCardLayout: state.stgfrrdcr.currentCardLayout,\r\n        isStageFourComplete: state.stgfrrdcr.isStageFourComplete,\r\n        clickedOnArray: state.stgfrrdcr.clickedOn,\r\n        isStageFourLost: state.stgfrrdcr.stageFourLost,\r\n        hearts: state.stgfrrdcr.hearts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeCandidate: () => dispatch({type: actionTypes.REMOVE_CANDIDATE}),\r\n        clearClickedOn: () => dispatch({type: actionTypes.STAGE_FOUR_CLEAR_CLICKED_ON}),\r\n        clickedOn: (ele) => dispatch({type: actionTypes.STAGE_FOUR_CLICKED_ON, clickedCard: ele}),\r\n        shuffleCardsAddToState: (array) => dispatch({type: actionTypes.STAGE_FOUR_SHUFFLE, value: array}),\r\n        stageFourLost: () => dispatch({type: actionTypes.STAGE_FOUR_LOST}),\r\n        stageFourLostRevert: () => dispatch({type: actionTypes.STAGE_FOUR_REVERT_LOST}),\r\n        stageFourComplete: () => dispatch({type: actionTypes.STAGE_FOUR_COMPLETED}),\r\n        newLife: () => dispatch({type: actionTypes.STAGE_FOUR_NEW_LIFE})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StageFour);\r\n\r\n","import React from 'react';\r\nimport Imp from '../../reusables/Images/Imp.png';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport classes from './BackToBattle.module.css';\r\n\r\nconst BackToBattle = () => {\r\n    const history = useHistory();\r\n    \r\n    history.push('/StageThree')\r\n    \r\n\r\n    return (\r\n        <div className={classes.BackToBattle}>\r\n            <div className={classes.ImpHolder}>\r\n                <img src={Imp} alt='Another Imp'/>\r\n            </div>\r\n            \r\n            <Link to='/StageThree'><p>Back to the battle!</p></Link>\r\n            \r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default BackToBattle","import React from 'react';\r\nimport classes from './GameWon.module.css';\r\nimport Sunset from '../../reusables/Images/SunsetDino.png';\r\n\r\n\r\n\r\n\r\nconst GameWon = (props) => {\r\n    return (\r\n        <div className={classes.GameWon}>\r\n            <p className={classes.Victory}>Victory</p>\r\n            <div className={classes.DinoHolder}>\r\n                <img className={classes.SunsetDino} src={Sunset} alt=\"Sunset\" onClick={props.clicked}></img>\r\n                <p className={classes.PlayAgain}>If you would like to play again, please click the sunset dinosaur.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GameWon;","import React, { Fragment } from 'react';\r\nimport Overlay from './reusables/Overlay/Overlay';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../store/actionTypes/actionTypes';\r\nimport FirstTime from './components/FirstTimeCompenent/FirstTime';\r\nimport WorldMap from './components/WorldMapComponent/WorldMap';\r\nimport { HashRouter, Route, useHistory } from 'react-router-dom';\r\nimport StageOne from './components/Stages/StageOneComponent/StageOne';\r\nimport StageTwo from './components/Stages/StageTwoComponent/StageTwo';\r\nimport StageThree from './components/Stages/StageThreeComponent/StageThree';\r\nimport StageFour from './components/Stages/StageFourComponent/StageFour';\r\nimport BackToBattle from './reusables/backToBattle/BackToBattle';\r\nimport GameWon from '../MemoryCardGame/components/GameWon/GameWon';\r\n \r\nconst MemoryCardGame = (props) => {\r\n\r\n    let history = useHistory();\r\n    let overlay = null\r\n    let firstTime = null\r\n    let worldMap = <WorldMap />\r\n    let stageOne = props.timerInitialized && !props.isStageThreeComplete ? <BackToBattle /> : <StageOne />\r\n    let stageTwo = props.timerInitialized && !props.isStageThreeComplete ? <BackToBattle /> : <StageTwo />\r\n    let stageThree = <StageThree />\r\n    let stageFour = props.timerInitialized && !props.isStageThreeComplete ? <BackToBattle /> : <StageFour />\r\n    if(!props.isStageOneComplete){\r\n        stageTwo = <div></div>\r\n        stageThree = <div></div>\r\n        stageFour = <div></div>\r\n    }\r\n    if(props.isUserFirstVisit){\r\n        overlay = <Overlay />\r\n        firstTime = <FirstTime />\r\n        worldMap = null\r\n        setTimeout(() => {\r\n            props.turnOffOverlay();\r\n            props.turnOffFirstVisit();\r\n        }, 28000);\r\n    }\r\n\r\n    if(props.timerInitialized && !props.isStageThreeComplete) {\r\n        worldMap = <BackToBattle />\r\n    }\r\n\r\n    const restartGame = () => {\r\n        history.push('/')\r\n        props.restartGame();\r\n\r\n    }\r\n    \r\n\r\n    if(props.isStageFourComplete) {\r\n        stageOne = <GameWon clicked={restartGame} />\r\n        stageTwo = <GameWon clicked={restartGame} />\r\n        stageThree = <GameWon clicked={restartGame} />\r\n        stageFour = <GameWon clicked={restartGame} />\r\n        worldMap = <GameWon clicked={restartGame} />\r\n    }\r\n    \r\n\r\n    return ( \r\n    <Fragment>\r\n        <HashRouter>\r\n            <Route path='/' exact render={() => {\r\n                return (<div>\r\n                    {overlay}\r\n                    {firstTime}\r\n                    {worldMap}\r\n                </div>)\r\n            } } />\r\n\r\n            <Route path='/StageOne' exact render={ () => <div>{stageOne}</div>} />\r\n            <Route path='/StageTwo' exact render={ () => <div>{stageTwo}</div>} />\r\n            <Route path='/StageThree' exact render={ () => <div>{stageThree}</div>} />\r\n            <Route path='/StageFour' exact render={ () => <div>{stageFour}</div>} />\r\n        </HashRouter>\r\n    </Fragment> \r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        turnOffOverlay: () => dispatch({type: actionTypes.TURN_OFF_OVERLAY}),\r\n        turnOffFirstVisit: () => dispatch({type: actionTypes.TURN_OFF_FIRST_VISIT}),\r\n        restartGame: () => dispatch({type: actionTypes.GAME_LOST})\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isOverlayOn: state.vrlyrdcr.isOverlayOn,\r\n        isUserFirstVisit: state.frsttmvstrdcr.isUserFirstVisit,\r\n        timerInitialized: state.tmrrdcr.timerInitialized,\r\n        isStageThreeComplete: state.stgthrrdcr.isStageThreeComplete,\r\n        isStageFourComplete: state.stgfrrdcr.isStageFourComplete,\r\n        isStageOneComplete: state.stgnrdcr.isStageOneComplete\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MemoryCardGame);","import React from 'react';\nimport './App.css';\nimport MemoryCardGame from './MemoryCardGame/MemoryCardGame';\n\nfunction App() {\n  return (\n    <MemoryCardGame />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nimport * as actionTypes from '../actionTypes/actionTypes';\r\n\r\nconst initialState = {\r\n    isOverlayOn: true\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case actionTypes.TURN_ON_OVERLAY : \r\n            return {\r\n                ...state,\r\n                isOverlayOn: true\r\n            }\r\n        case actionTypes.TURN_OFF_OVERLAY : \r\n            return {\r\n                ...state,\r\n                isOverlayOn: false\r\n            }\r\n        default :\r\n             return state\r\n    }\r\n\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actionTypes/actionTypes';\r\n\r\nconst initialState = {\r\n    isUserFirstVisit: true\r\n};\r\n\r\nconst firstVisitReducer = (state = initialState, action) => {\r\n    if(action.type === actionTypes.TURN_OFF_FIRST_VISIT) {\r\n        return {\r\n            ...state,\r\n            isUserFirstVisit: false\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\nexport default firstVisitReducer;","import * as actionTypes from '../actionTypes/actionTypes';\r\n\r\nconst initialState = {\r\n    timerIsRunning: true,\r\n    instructionsNumber: 0\r\n};\r\n\r\nconst instructionsReducer = (state = initialState, action) => {\r\n    if(action.type === actionTypes.INCR_INSTRUCTIONS_NUMBER) {\r\n        \r\n            return {\r\n                ...state,\r\n                instructionsNumber: state.instructionsNumber + 1\r\n            }\r\n            \r\n\r\n    }\r\n    return state\r\n}\r\n\r\n\r\nexport default instructionsReducer;","import * as actionTypes from '../actionTypes/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    isStageOneComplete: false,\r\n    clickedOn: [],\r\n    stageOneLost: false\r\n};\r\n\r\nconst stageOnereducer = (state = initialState, action) => {\r\n\r\n\r\n    if(action.type === actionTypes.STAGE_ONE_CLICKED_ON){\r\n\r\n        console.log(action.clickedCard)\r\n        return {\r\n            ...state,\r\n            clickedOn: [...state.clickedOn.concat([action.clickedCard])]\r\n        }\r\n    }\r\n\r\n    if(action.type === actionTypes.STAGE_ONE_CLEAR_CLICKED_ON){\r\n        return {\r\n            ...state,\r\n            clickedOn: []\r\n        }\r\n    }\r\n\r\n    if(action.type === actionTypes.STAGE_ONE_COMPLETED){\r\n        return {\r\n            ...state,\r\n            isStageOneComplete: true\r\n        }\r\n    }\r\n\r\n    if(action.type === actionTypes.STAGE_ONE_LOST){\r\n        return {\r\n            ...state,\r\n            stageOneLost: true\r\n        }\r\n    }\r\n\r\n    if(action.type === actionTypes.STAGE_ONE_REVERT_LOST){\r\n        return {\r\n            ...state,\r\n            stageOneLost: false\r\n        }\r\n    }\r\n\r\n\r\n    return state\r\n};\r\n\r\nexport default stageOnereducer;","import * as actionTypes from '../actionTypes/actionTypes';\r\n\r\nconst initialState = {\r\n    isStageTwoComplete: false,\r\n    vills: [{name: 'Crit',\r\n            description: 'Hi, I\\'m Crit. I manage the forest area, but most of the time I like to just play with this stick.'},\r\n            {\r\n                name: 'Racoon',\r\n                description: 'I\\'m Randolf. But you can just call me Rac.' \r\n            },\r\n            {\r\n                name: 'Goose',\r\n                description: 'The name\\'s Captain Goose. Stand back everyone! A goose\\'s gotta do what a goose has gotta do!  '\r\n            },\r\n            {\r\n                name: 'Squirrel',\r\n                description: 'Hi, my names Acorn. Let\\'s play some music together sometime? Just kidding...Unless? '\r\n            },\r\n            {\r\n                name: 'Dino',\r\n                description: 'I\\'m Twi, the twilight dinosaur. My brother the sunset dinosaur is missing. Can you help me find him?'\r\n            }\r\n            ],\r\n    stageTwoLost: false,\r\n    candidate: null\r\n};\r\n\r\nconst stageTwoReducer = (state = initialState, action) => {\r\n\r\n    if(action.type === actionTypes.REMOVE_CANDIDATE){\r\n\r\n        let condition = (candidateObject) => {\r\n            return candidateObject.name !== state.candidate\r\n        }\r\n        \r\n        return {\r\n            ...state,\r\n            vills:  state.vills.filter(condition),\r\n            candidate: null\r\n        }\r\n    }\r\n\r\n    if(action.type === actionTypes.STAGE_TWO_COMPLETED) {\r\n        return {\r\n            ...state,\r\n            isStageTwoComplete: true\r\n        }\r\n    }\r\n\r\n    if(action.type === actionTypes.BECOME_CANDIDATE) {\r\n        switch (action.name) {\r\n            case 'Crit' :\r\n                return {\r\n                    ...state,\r\n                    candidate: 'Crit'\r\n                }\r\n            \r\n        case 'Racoon' :\r\n                return {\r\n                    ...state,\r\n                    candidate: 'Racoon'\r\n                }\r\n            \r\n            case 'Goose' :\r\n                return {\r\n                    ...state,\r\n                    candidate: 'Goose'\r\n                }\r\n            \r\n            case 'Dino' :\r\n                return {\r\n                    ...state,\r\n                    candidate: 'Dino'\r\n                }\r\n            \r\n            case 'Squirrel' :\r\n                return {\r\n                    ...state,\r\n                    candidate: 'Squirrel'\r\n                }\r\n            \r\n    \r\n            default:\r\n                return {\r\n                    ...state,\r\n                    candidate: null\r\n                }\r\n    }\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return state\r\n};\r\n\r\nexport default stageTwoReducer;","import * as actionTypes from '../actionTypes/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    isStageThreeComplete: false,\r\n    clickedOn: [],\r\n    stageThreeLost: false,\r\n    currentCardLayout: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.STAGE_THREE_COMPLETED :\r\n            return {\r\n                ...state,\r\n                isStageThreeComplete: true\r\n            }\r\n        case actionTypes.STAGE_THREE_CLICKED_ON :\r\n            return {\r\n                ...state,\r\n                clickedOn: [...state.clickedOn.concat([action.clickedCard])]\r\n            }\r\n        case actionTypes.STAGE_THREE_CLEAR_CLICKED_ON :\r\n            return {\r\n                ...state,\r\n                clickedOn: []\r\n            }\r\n        case actionTypes.STAGE_THREE_LOST :\r\n            return {\r\n                ...state,\r\n                stageThreeLost: true\r\n            }\r\n        case actionTypes.STAGE_THREE_REVERT_LOST :\r\n            return {\r\n                ...state,\r\n                stageThreeLost: false\r\n            }\r\n        case actionTypes.STAGE_THREE_SHUFFLE : \r\n        return {\r\n            ...state,\r\n            currentCardLayout: action.value\r\n        }\r\n  \r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n    return state\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actionTypes/actionTypes';\r\nconst initialState = {\r\n    timer: 61,\r\n    timerStarted: false,\r\n    timerInitialized: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.START_TIMER :\r\n            return {\r\n                ...state,\r\n                timerStarted: true\r\n            }\r\n        case actionTypes.INITIALIZE_TIMER :\r\n            return {\r\n                ...state,\r\n                timerInitialized: true\r\n            }\r\n        case actionTypes.STOP_TIMER :\r\n            return {\r\n                ...state,\r\n                timerStarted: false,\r\n                timerInitialized: false\r\n            }\r\n        case actionTypes.DECREASRE_SECONDS :\r\n            let timer = state.timer - 1\r\n            return {\r\n                ...state,\r\n                timer: timer\r\n            }\r\n        case actionTypes.RESET_TIMER : \r\n        return {\r\n            ...state,\r\n            timer: 61\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actionTypes/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    isStageFourComplete: false,\r\n    clickedOn: [],\r\n    stageFourLost: false,\r\n    currentCardLayout: [],\r\n    hearts: 4\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.STAGE_FOUR_COMPLETED :\r\n            return {\r\n                ...state,\r\n                isStageFourComplete: true\r\n            }\r\n        case actionTypes.STAGE_FOUR_CLICKED_ON :\r\n            return {\r\n                ...state,\r\n                clickedOn: [...state.clickedOn.concat([action.clickedCard])]\r\n            }\r\n        case actionTypes.STAGE_FOUR_CLEAR_CLICKED_ON :\r\n            return {\r\n                ...state,\r\n                clickedOn: []\r\n            }\r\n        case actionTypes.STAGE_FOUR_LOST :\r\n            \r\n            return {\r\n                ...state,\r\n                stageFourLost: true,\r\n                hearts: state.hearts - 1\r\n            }\r\n        case actionTypes.STAGE_FOUR_REVERT_LOST :\r\n            return {\r\n                ...state,\r\n                stageFourLost: false\r\n            }\r\n        case actionTypes.STAGE_FOUR_SHUFFLE : \r\n        return {\r\n            ...state,\r\n            currentCardLayout: action.value\r\n        }\r\n        case actionTypes.STAGE_FOUR_NEW_LIFE : \r\n        return {\r\n            ...state,\r\n            hearts: 4\r\n        }\r\n  \r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n    return state\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as actionTypes from './store/actionTypes/actionTypes';\n\nimport overlayReducer from './store/reducers/overlayReducer';\nimport firstVisitReducer from './store/reducers/firstVisitReducer';\nimport instructionsReducer from './store/reducers/instructionsReducer';\nimport stageOneReducer from './store/reducers/stageOneReducer'\nimport stageTwoReducer from './store/reducers/stageTwoReducer';\nimport stageThreeReducer from './store/reducers/stageThreeReducer';\nimport timerReducer from './store/reducers/timerReducer';\nimport stageFourReducer from './store/reducers/stageFourReducer';\n\n\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {}\n\nconst appReducer = combineReducers(\n  {\n    vrlyrdcr: overlayReducer,\n    frsttmvstrdcr: firstVisitReducer,\n    nstrctnsrdcr: instructionsReducer,\n    stgnrdcr: stageOneReducer,\n    stgtwrdcr: stageTwoReducer,\n    stgthrrdcr: stageThreeReducer,\n    tmrrdcr: timerReducer,\n    stgfrrdcr: stageFourReducer\n  }\n)\nconst rootReducer = (state, action) => {\n  if (action.type === actionTypes.GAME_LOST) {\n    state = undefined\n  }\n\n  return appReducer(state, action)\n}\n\n\nconst store = createStore(rootReducer, persistedState)\n\nstore.subscribe(()=>{\n  window.localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={ store }>\n        <App />\n      </Provider>\n    </BrowserRouter>\n    \n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}